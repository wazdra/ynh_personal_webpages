#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

### Settings are automatically loaded as bash variables
### in every app script context, therefore typically these will exist:
### - $domain
### - $path
### - $language
### - $install_dir
### - $port
### ...

### In the context of upgrade,
### - resources are automatically provisioned / updated / deleted (depending on existing resources)
### - a safety backup is automatically created by the core and will be restored if the upgrade fails

ynh_script_progression "Ensuring data directory structure..."

mkdir -p "$data_dir/exports"
chown -R "$app:www-data" "$data_dir"
chmod 0755 "$data_dir" "$data_dir/exports"

# Reapply NGINX configuration (updates template variables like DATA_DIR)
export DATA_DIR="$data_dir"
ynh_config_add_nginx

# Re-provision bind mounts for current ssh users
ynh_script_progression "Provisioning user exports..."
provision_userdir() {
	local u="$1"; local home="/home/$u"; local src="$home/public_html"; local dst="$data_dir/exports/$u"
	[ -d "$src" ] || { mkdir -p "$src"; chown "$u:$u" "$src"; chmod 0755 "$src"; }
	mkdir -p "$dst"; chown "$app:www-data" "$dst"; chmod 0755 "$dst"
	if ! grep -q "^$src[[:space:]]\+$dst[[:space:]]\+none[[:space:]]\+bind,ro" /etc/fstab; then
		echo "$src $dst none bind,ro 0 0" >> /etc/fstab
	fi
	mountpoint -q "$dst" || mount "$dst" || true
}

if getent group ssh >/dev/null; then
	for u in $(getent group ssh | awk -F: '{print $4}' | tr ',' ' '); do
		[ -n "$u" ] && provision_userdir "$u"
	done
fi

ynh_systemctl --service=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
